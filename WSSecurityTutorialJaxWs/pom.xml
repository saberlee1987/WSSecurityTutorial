<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.security</groupId>
	<artifactId>WSSecurityTutorialJaxWs</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>${project.artifactId}</name>
	<description>
		This module contains maven configurations for generating JAX-WS-compliant code from the WSDL
		in the WSSecurityTutorialWSDL, and then jars these up for re-use later. The generated JAR also
		includes the WSDL files themselves so they can be retrieved from the classpath by any client if
		necessary.
		
		It is worth noting that these classes are generated using the standard javax classes for
		wsimport, and not the CXF-specific importer.  This is mostly done for historical reasons, but
		also ensures that our generated classes should be usable by any JAX-WS-compliant processor,
		not just CXF.
		
		Note also that the file src/main/jaxws/tutorial.xml controls the JAX-WS/JAXB binding process,
		producing several customizations to the binding (specifically, handling dates as Calendars)
		and URI's as java URI objects; adding JaxbCommonSuperclass as the superclass of all generated
		model objects, making generated types serializable, and turning on "simple" mode which makes
		the generated classes somewhat more friendly to java standards).
	</description>
	<inceptionYear>2011</inceptionYear>
	
	<parent>
		<groupId>com.example.security</groupId>
		<artifactId>WSSecurityTutorialParent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../WSSecurityTutorialParent</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>sun-jaxws</groupId>
			<artifactId>jaxws-rt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>WSSecurityTutorialWSDL</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-wsdl</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>WSSecurityTutorialWSDL</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${basedir}/target/wsdl-resources</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>WSSecurityTutorialWSDL</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${basedir}/target/classes/wsdl</outputDirectory>
								</artifactItem>
							</artifactItems>
                            <includes>**.xsd, **.wsdl</includes>
                            <excludes>META-INF\/**</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>jaxws</id>
						<goals>
							<goal>wsimport</goal>
						</goals>
						<configuration>
							<bindingFiles>
								<bindingFile>${basedir}/src/main/jaxws/tutorial.xml</bindingFile>
							</bindingFiles>
							<wsdlDirectory>${basedir}/target/wsdl-resources</wsdlDirectory>
							<wsdlFiles>
								<wsdlFile>TutorialService.wsdl</wsdlFile>
							</wsdlFiles>
							<extension>true</extension>
							<xjcArgs>
								<xjcArg>-extension</xjcArg>
							</xjcArgs>
							<staleFile>${project.build.directory}/jaxws/stale/tutorial.staleFlag</staleFile>
							<xadditionalHeaders>true</xadditionalHeaders>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
