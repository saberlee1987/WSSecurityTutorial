<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.security</groupId>
	<artifactId>WSSecurityTutorialWAR</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>${project.artifactId}</name>
	<description>The WSDL and XSD's used to generate your sevices.</description>
	<inceptionYear>2011</inceptionYear>
	
	<parent>
		<groupId>com.example.security</groupId>
		<artifactId>WSSecurityTutorialParent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../WSSecurityTutorialParent</relativePath>
	</parent>

	<properties>
		<port>9095</port>
		<apjPort>8010</apjPort>
		<stopPort>9977</stopPort>
		<waitForCargo>true</waitForCargo>

		<serverKeyAlias>myservicekey</serverKeyAlias>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-ws-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-ws-policy</artifactId>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>WSSecurityTutorialWSDL</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-ext</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.cal10n</groupId>
			<artifactId>cal10n-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.cengage.standards</groupId>
			<artifactId>CengageSpringExtensions</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.jks</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.jks</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/conf</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/main/springconfig/local</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.jks</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/main/springconfig/local</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.jks</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/jetty</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-wsdl</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>WSSecurityTutorialWSDL</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${basedir}/target/wsdl-resources/WEB-INF/wsdl/</outputDirectory>
								</artifactItem>
							</artifactItems>
							<includes>**.xsd,**.wsdl</includes>
							<excludes>META-INF\/**</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>${basedir}/target/wsdl-resources/</directory>
							<includes>
								<include>**/*</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>
					<wait>${waitForCargo}</wait>
					<container>
						<containerId>${containerId}</containerId>
						<type>installed</type>
						<zipUrlInstaller>
							<url>${downloadUrl}</url>
							<installDir>${installDir}</installDir>
						</zipUrlInstaller>
						<systemProperties>
							<configDirectory>${basedir}/target/test-classes</configDirectory>
							<jms.uri>${activeMqUrl}</jms.uri >
							<jms.endpoint>${activeMqUrl}</jms.endpoint>
						</systemProperties>
					</container>
					<configuration>
						<home>${project.build.directory}/${containerId}/container</home>
						<properties>
							<cargo.servlet.port>${port}</cargo.servlet.port>
							<cargo.logging>high</cargo.logging>
							<cargo.servlet.users>admin::manager</cargo.servlet.users>
							<cargo.tomcat.ajp.port>${apjPort}</cargo.tomcat.ajp.port>
							<cargo.rmi.port>${stopPort}</cargo.rmi.port>
							<cargo.jvmargs>-Xmx1024m -XX:MaxPermSize=256m -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n</cargo.jvmargs>
						</properties>
						<deployables>
							<deployable>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<pingURL>http://localhost:${port}/${project.artifactId}/index.jsp</pingURL>
								<pingTimeout>60000</pingTimeout>
								<properties>
									<context>${project.artifactId}</context>
								</properties>
							</deployable>
						</deployables>
					</configuration>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopPort>${stopPort}</stopPort>
					<stopKey>foo</stopKey>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
					</webAppConfig>
					<webAppSourceDirectory>${basedir}/target/${project.artifactId}-${project.version}</webAppSourceDirectory>
					<webApp>${basedir}/target/${project.artifactId}-${project.version}.war</webApp>
					<systemProperties>
						<systemProperty>
							<name>configDirectory</name>
							<value>${basedir}/target/test-classes</value>
						</systemProperty>
						<systemProperty>
							<name>jms.uri</name>
							<value>${activeMqUrl}</value>
						</systemProperty>
						<systemProperty>
							<name>jms.endpoint</name>
							<value>${activeMqUrl}</value>
						</systemProperty>
					</systemProperties>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>${port}</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<jettyConfig>${basedir}/target/test-classes/jetty.xml</jettyConfig>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-deploy</artifactId>
						<version>${jettyVersion}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>
